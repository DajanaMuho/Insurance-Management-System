{"ast":null,"code":"var _jsxFileName = \"/home/dajana/Desktop/Insurance-Managament-System/frontend/src/components/auth/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport '../../index.css';\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst API = require(\"../../api/index\").default;\n\nfunction Login(props) {\n  _s();\n\n  const [addressEmail, setAddressEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const history = useHistory();\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.currentTarget || evt.target;\n\n    if (name === 'email') {\n      setAddressEmail(value);\n    } else {\n      setPassword(value);\n    }\n  };\n\n  const handleLogin = async evt => {\n    try {\n      evt.preventDefault();\n      const result = await API.login({\n        addressEmail,\n        password\n      });\n\n      if (result) {\n        localStorage.setItem('token', result);\n        return history.push('/main/dashboard');\n      }\n\n      alert(\"We couldn't login to the system!\");\n    } catch (err) {\n      alert(err.message);\n      throw err;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    className: \"containerClass\",\n    children: /*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"rowClass\",\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        md: \"6\",\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"h5 text-center mb-4\",\n                children: \"SIGN IN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grey-text\",\n                children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Address Email\",\n                  name: \"email\",\n                  icon: \"envelope\",\n                  type: \"email\",\n                  validate: true,\n                  error: \"wrong\",\n                  success: \"right\",\n                  value: addressEmail,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n                  label: \"Password\",\n                  name: \"password\",\n                  icon: \"lock\",\n                  type: \"password\",\n                  validate: true,\n                  value: password,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n                  className: \"btn submit\",\n                  onClick: handleLogin,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2\",\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    className: \"p-4\",\n                    href: \"/auth/register\",\n                    children: \"Create new account\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"YzpwucVM0+tMXRewBbpFadxn+m4=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/dajana/Desktop/Insurance-Managament-System/frontend/src/components/auth/Login.jsx"],"names":["React","useState","useHistory","MDBContainer","MDBRow","MDBCol","MDBInput","MDBBtn","MDBCard","MDBCardBody","API","require","default","Login","props","addressEmail","setAddressEmail","password","setPassword","history","handleChange","evt","name","value","currentTarget","target","handleLogin","preventDefault","result","login","localStorage","setItem","push","alert","err","message"],"mappings":"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","sourcesContent":["import '../../index.css';\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn, MDBCard, MDBCardBody } from 'mdbreact';\nconst API = require(\"../../api/index\").default;\n\nfunction Login (props) {\n    const [ addressEmail, setAddressEmail ] = useState('');\n    const [ password, setPassword ] = useState('');\n    const history = useHistory();\n    \n    \n    const handleChange = (evt) => {\n        const {name, value } = evt.currentTarget || evt.target;\n        if (name === 'email') {\n            setAddressEmail(value);\n        } else {\n            setPassword(value);\n        }\n    }\n\n\n    const handleLogin = async (evt) => {\n        try {\n            evt.preventDefault();\n            const result = await API.login({ addressEmail, password});\n            if (result) {\n                localStorage.setItem('token', result);\n                return history.push('/main/dashboard')\n            }\n            alert (\"We couldn't login to the system!\");\n          } catch(err) {\n            alert (err.message);\n            throw err;\n          }\n    }\n\n    return (\n        <MDBContainer className=\"containerClass\">\n        <MDBRow className=\"rowClass\">\n            <MDBCol md=\"6\">\n                <MDBCard>\n                    <MDBCardBody>\n                        <form>\n                            <p className=\"h5 text-center mb-4\">SIGN IN</p>\n                            <div className=\"grey-text\">\n                            <MDBInput \n                                label=\"Address Email\" \n                                name=\"email\"\n                                icon=\"envelope\"  \n                                type=\"email\" \n                                validate \n                                error=\"wrong\"\n                                success=\"right\" \n                                value={addressEmail}\n                                onChange={handleChange}\n                            />\n                            <MDBInput \n                                label=\"Password\" \n                                name=\"password\"\n                                icon=\"lock\"  \n                                type=\"password\" \n                                validate \n                                value={password}\n                                onChange={handleChange}\n                            />\n                            </div>\n                            <div className=\"text-center\">\n                                <MDBBtn className=\"btn submit\" onClick={handleLogin}>Login</MDBBtn>\n                                <div className=\"p-2\">\n                                    <a className=\"p-4\" href=\"/auth/register\">Create new account</a>\n                                    {/* TODO: To be supported if there were other versions\n                                    <a className=\"p-4\" href=\"/auth/forgotPassword\">Forgot Password?</a> */}\n                                </div>\n                            </div>\n                        </form>\n                    </MDBCardBody>\n                </MDBCard>\n            </MDBCol>\n        </MDBRow>\n        </MDBContainer>\n    )\n}\nexport default Login;"]},"metadata":{},"sourceType":"module"}