{"ast":null,"code":"var _jsxFileName = \"/home/dajana/Desktop/Insurance-Managament-System/frontend/src/components/main/Customers.jsx\",\n    _s = $RefreshSig$();\n\nimport Navigatior from \"./Navigatior\";\nimport CustomerModal from \"./CustomerModal\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MDBDataTable, MDBBtn, MDBIcon } from 'mdbreact';\nimport '../../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst API = require(\"../../api/main\").default;\n\nfunction Customers(props) {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState({\n    columns: [{\n      label: 'First Name',\n      field: 'firstName',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Last Name',\n      field: 'lastName',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Email Address',\n      field: 'addressEmail',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Phone Number',\n      field: 'phoneNumber',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Gender',\n      field: 'gender',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Age',\n      field: 'age',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Martial Status',\n      field: 'martialStatus',\n      sort: 'asc',\n      width: 150\n    }, {\n      label: 'Action',\n      field: 'customer',\n      sort: 'asc',\n      width: 150\n    }],\n    rows: [] //TODO: read from redis cache\n\n  });\n  const [showModal, setShowModal] = useState(false);\n  const [selectedCustomer, setSelectedCustomer] = useState({\n    firstName: '',\n    lastName: '',\n    addressEmail: '',\n    phoneNumber: '',\n    gender: '',\n    age: '',\n    martialStatus: ''\n  });\n  const token = localStorage.getItem('token');\n\n  const addCustomers = () => {\n    setSelectedCustomer({\n      firstName: '',\n      lastName: '',\n      addressEmail: '',\n      phoneNumber: '',\n      gender: '',\n      age: '',\n      martialStatus: ''\n    }); //Set a new one for every insert\n\n    return setShowModal(!showModal);\n  };\n\n  const handleEdit = evt => {\n    const target = evt.currentTarget || evt.target;\n    const customer = data.rows.find(row => row._id === target.id);\n    setSelectedCustomer(customer);\n    return setShowModal(true);\n  };\n\n  const handleDelete = async evt => {\n    //TODO: Add popup component\n    const target = evt.currentTarget || evt.target;\n    const response = await API.deleteCustomerById(token, target.id);\n    if (response) return history.push('/main/customers');\n    alert(response);\n  };\n\n  const fetchCustomers = async () => {\n    //TODO: ADd fail catch\n    const consumers = await API.getCustomers(token);\n    const customerData = { ...data\n    };\n    consumers.forEach(consumer => {\n      consumer['customer'] = /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n          size: \"sm\",\n          id: consumer._id,\n          onClick: evt => handleEdit(evt),\n          children: [\" \", /*#__PURE__*/_jsxDEV(MDBIcon, {\n            icon: \"pencil-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 89\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          size: \"sm\",\n          id: consumer._id,\n          onClick: evt => {\n            handleDelete(evt);\n          },\n          children: [\"  \", /*#__PURE__*/_jsxDEV(MDBIcon, {\n            icon: \"trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 94\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    });\n    customerData.rows = consumers;\n    setData(customerData);\n  };\n\n  useEffect(() => {\n    fetchCustomers();\n  }, [showModal, data, selectedCustomer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigatior, {\n      customersActive: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableStyle\",\n      children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n        onClick: () => {\n          addCustomers();\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(MDBIcon, {\n          icon: \"plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 61\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MDBDataTable, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(CustomerModal, {\n      customer: selectedCustomer,\n      setShowModal: setShowModal,\n      showModal: showModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Customers, \"wXRK7LQ/LnNux5X+H12rkCI5Wbg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Customers;\nexport default Customers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Customers\");","map":{"version":3,"sources":["/home/dajana/Desktop/Insurance-Managament-System/frontend/src/components/main/Customers.jsx"],"names":["Navigatior","CustomerModal","React","useState","useEffect","useHistory","MDBDataTable","MDBBtn","MDBIcon","API","require","default","Customers","props","history","data","setData","columns","label","field","sort","width","rows","showModal","setShowModal","selectedCustomer","setSelectedCustomer","firstName","lastName","addressEmail","phoneNumber","gender","age","martialStatus","token","localStorage","getItem","addCustomers","handleEdit","evt","target","currentTarget","customer","find","row","_id","id","handleDelete","response","deleteCustomerById","push","alert","fetchCustomers","consumers","getCustomers","customerData","forEach","consumer"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,OAA/B,QAA8C,UAA9C;AACA,OAAO,iBAAP;;;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,gBAAD,CAAP,CAA0BC,OAAtC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACtB,QAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC7Bc,IAAAA,OAAO,EAAE,CACL;AACIC,MAAAA,KAAK,EAAE,YADX;AAEIC,MAAAA,KAAK,EAAE,WAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KADK,EAOL;AACIH,MAAAA,KAAK,EAAE,WADX;AAEIC,MAAAA,KAAK,EAAE,UAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KAPK,EAaL;AACIH,MAAAA,KAAK,EAAE,eADX;AAEIC,MAAAA,KAAK,EAAE,cAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KAbK,EAmBL;AACIH,MAAAA,KAAK,EAAE,cADX;AAEIC,MAAAA,KAAK,EAAE,aAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KAnBK,EAyBL;AACIH,MAAAA,KAAK,EAAE,QADX;AAEIC,MAAAA,KAAK,EAAE,QAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KAzBK,EA+BL;AACIH,MAAAA,KAAK,EAAE,KADX;AAEIC,MAAAA,KAAK,EAAE,KAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KA/BK,EAqCL;AACIH,MAAAA,KAAK,EAAE,gBADX;AAEIC,MAAAA,KAAK,EAAE,eAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KArCK,EA2CL;AACIH,MAAAA,KAAK,EAAE,QADX;AAEIC,MAAAA,KAAK,EAAE,UAFX;AAGIC,MAAAA,IAAI,EAAE,KAHV;AAIIC,MAAAA,KAAK,EAAE;AAJX,KA3CK,CADoB;AAmD7BC,IAAAA,IAAI,EAAE,EAnDuB,CAmDpB;;AAnDoB,GAAD,CAAhC;AAqDA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BrB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACsB,gBAAD,EAAmBC,mBAAnB,IAA0CvB,QAAQ,CAAC;AACrDwB,IAAAA,SAAS,EAAE,EAD0C;AAErDC,IAAAA,QAAQ,EAAE,EAF2C;AAGrDC,IAAAA,YAAY,EAAE,EAHuC;AAIrDC,IAAAA,WAAW,EAAE,EAJwC;AAKrDC,IAAAA,MAAM,EAAE,EAL6C;AAMrDC,IAAAA,GAAG,EAAE,EANgD;AAOrDC,IAAAA,aAAa,EAAE;AAPsC,GAAD,CAAxD;AASA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACvBX,IAAAA,mBAAmB,CAAC;AAChBC,MAAAA,SAAS,EAAE,EADK;AAEhBC,MAAAA,QAAQ,EAAE,EAFM;AAGhBC,MAAAA,YAAY,EAAE,EAHE;AAIhBC,MAAAA,WAAW,EAAE,EAJG;AAKhBC,MAAAA,MAAM,EAAE,EALQ;AAMhBC,MAAAA,GAAG,EAAE,EANW;AAOhBC,MAAAA,aAAa,EAAE;AAPC,KAAD,CAAnB,CADuB,CASnB;;AACJ,WAAOT,YAAY,CAAC,CAACD,SAAF,CAAnB;AACH,GAXD;;AAaA,QAAMe,UAAU,GAAIC,GAAD,IAAS;AACxB,UAAMC,MAAM,GAAGD,GAAG,CAACE,aAAJ,IAAqBF,GAAG,CAACC,MAAxC;AACA,UAAME,QAAQ,GAAG3B,IAAI,CAACO,IAAL,CAAUqB,IAAV,CAAeC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYL,MAAM,CAACM,EAAzC,CAAjB;AACApB,IAAAA,mBAAmB,CAACgB,QAAD,CAAnB;AACF,WAAOlB,YAAY,CAAC,IAAD,CAAnB;AACD,GALD;;AAOA,QAAMuB,YAAY,GAAG,MAAOR,GAAP,IAAe;AAChC;AACA,UAAMC,MAAM,GAAGD,GAAG,CAACE,aAAJ,IAAqBF,GAAG,CAACC,MAAxC;AACA,UAAMQ,QAAQ,GAAG,MAAMvC,GAAG,CAACwC,kBAAJ,CAAuBf,KAAvB,EAA8BM,MAAM,CAACM,EAArC,CAAvB;AACA,QAAIE,QAAJ,EAAc,OAAOlC,OAAO,CAACoC,IAAR,CAAa,iBAAb,CAAP;AACdC,IAAAA,KAAK,CAACH,QAAD,CAAL;AACH,GAND;;AAQA,QAAMI,cAAc,GAAG,YAAY;AAC/B;AACA,UAAMC,SAAS,GAAG,MAAM5C,GAAG,CAAC6C,YAAJ,CAAiBpB,KAAjB,CAAxB;AACA,UAAMqB,YAAY,GAAG,EAAC,GAAGxC;AAAJ,KAArB;AACAsC,IAAAA,SAAS,CAACG,OAAV,CAAkBC,QAAQ,IAAI;AAC1BA,MAAAA,QAAQ,CAAC,UAAD,CAAR,gBAAuB;AAAA,gCACnB,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,IAAb;AAAkB,UAAA,EAAE,EAAEA,QAAQ,CAACZ,GAA/B;AAAoC,UAAA,OAAO,EAAGN,GAAD,IAASD,UAAU,CAACC,GAAD,CAAhE;AAAA,uCAAwE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADmB,eAEnB,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,IAAb;AAAkB,UAAA,EAAE,EAAEkB,QAAQ,CAACZ,GAA/B;AAAoC,UAAA,OAAO,EAAGN,GAAD,IAAS;AAACQ,YAAAA,YAAY,CAACR,GAAD,CAAZ;AAAkB,WAAzE;AAAA,wCAA6E,QAAC,OAAD;AAAS,YAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,kBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFmB;AAAA,sBAAvB;AAIH,KALD;AAMAgB,IAAAA,YAAY,CAACjC,IAAb,GAAoB+B,SAApB;AACArC,IAAAA,OAAO,CAACuC,YAAD,CAAP;AACH,GAZD;;AAcAnD,EAAAA,SAAS,CAAE,MAAM;AACbgD,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAAC7B,SAAD,EAAYR,IAAZ,EAAkBU,gBAAlB,CAFM,CAAT;AAIA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,eAAe,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAEY,UAAAA,YAAY;AAAI,SAAzC;AAAA,qCAA4C,QAAC,OAAD;AAAS,UAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AACI,QAAA,OAAO,MADX;AAEI,QAAA,QAAQ,MAFZ;AAGI,QAAA,KAAK,MAHT;AAII,QAAA,IAAI,EAAEtB;AAJV;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAWKQ,SAAS,iBAAI,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEE,gBAAzB;AAA2C,MAAA,YAAY,EAAED,YAAzD;AAAuE,MAAA,SAAS,EAAED;AAAlF;AAAA;AAAA;AAAA;AAAA,YAXlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAhIQX,S;UACWP,U;;;KADXO,S;AAiIT,eAAeA,SAAf","sourcesContent":["import Navigatior from \"./Navigatior\";\nimport CustomerModal from \"./CustomerModal\";\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MDBDataTable, MDBBtn, MDBIcon } from 'mdbreact';\nimport '../../index.css';\nconst API = require(\"../../api/main\").default;\n\nfunction Customers(props) {\n    const history = useHistory();\n    const [data, setData] = useState({\n        columns: [\n            {\n                label: 'First Name',\n                field: 'firstName',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'Last Name',\n                field: 'lastName',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'Email Address',\n                field: 'addressEmail',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'Phone Number',\n                field: 'phoneNumber',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'Gender',\n                field: 'gender',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'Age',\n                field: 'age',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'Martial Status',\n                field: 'martialStatus',\n                sort: 'asc',\n                width: 150\n            },\n            {\n                label: 'Action',\n                field: 'customer',\n                sort: 'asc',\n                width: 150\n            },\n        ],\n        rows: [] //TODO: read from redis cache\n    });\n    const [showModal, setShowModal] = useState(false);\n    const [selectedCustomer, setSelectedCustomer] = useState({\n        firstName: '',\n        lastName: '',\n        addressEmail: '',\n        phoneNumber: '',\n        gender: '',\n        age: '',\n        martialStatus: '',\n    });\n    const token = localStorage.getItem('token');\n\n    const addCustomers = () => {\n        setSelectedCustomer({\n            firstName: '',\n            lastName: '',\n            addressEmail: '',\n            phoneNumber: '',\n            gender: '',\n            age: '',\n            martialStatus: '',\n        }); //Set a new one for every insert\n        return setShowModal(!showModal);\n    }\n    \n    const handleEdit = (evt) => {\n        const target = evt.currentTarget || evt.target;\n        const customer = data.rows.find(row => row._id === target.id);\n        setSelectedCustomer(customer);\n      return setShowModal(true);\n    }\n\n    const handleDelete = async (evt) => {\n        //TODO: Add popup component\n        const target = evt.currentTarget || evt.target;\n        const response = await API.deleteCustomerById(token, target.id);\n        if (response) return history.push('/main/customers');\n        alert(response); \n    }\n\n    const fetchCustomers = async () => {\n        //TODO: ADd fail catch\n        const consumers = await API.getCustomers(token);\n        const customerData = {...data};\n        consumers.forEach(consumer => {\n            consumer['customer'] = <>\n                <MDBBtn size=\"sm\" id={consumer._id} onClick={(evt) => handleEdit(evt)}> <MDBIcon icon=\"pencil-alt\"/>  </MDBBtn>  \n                <MDBBtn size=\"sm\" id={consumer._id} onClick={(evt) => {handleDelete(evt)}}>  <MDBIcon icon=\"trash-alt\"/>  </MDBBtn>\n            </>\n        })\n        customerData.rows = consumers;\n        setData(customerData)\n    }\n\n    useEffect (() => {\n        fetchCustomers();\n    }, [showModal, data, selectedCustomer]);\n\n    return(\n        <div>\n            <Navigatior customersActive=\"active\" />\n            <div className='tableStyle'>\n                <MDBBtn onClick={() => { addCustomers() }}> <MDBIcon icon=\"plus\"/> </MDBBtn>\n                <MDBDataTable \n                    striped \n                    bordered\n                    hover\n                    data={data}\n                />\n            </div>\n            {showModal && <CustomerModal customer={selectedCustomer} setShowModal={setShowModal} showModal={showModal}></CustomerModal>}\n        </div>\n    )\n}\nexport default Customers"]},"metadata":{},"sourceType":"module"}