{"ast":null,"code":"var _jsxFileName = \"/home/dajana/Desktop/Insurance-Managament-System/frontend/src/components/main/DeviceModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput, MDBIcon } from 'mdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst API = require(\"../../api/main\").default;\n\nfunction DeviceModal(props) {\n  _s();\n\n  const [selectedDevice, setSelectedDevice] = useState(props.selectedDevice);\n  const history = useHistory();\n\n  const toggle = () => {\n    return props.setShowModal(!props.showModal);\n  };\n\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.currentTarget || evt.target;\n    const data = { ...selectedDevice\n    };\n    data[name] = value;\n    setSelectedDevice(data);\n  };\n\n  const editDevice = async evt => {\n    try {\n      evt.preventDefault();\n      const result = await API.editDevice(selectedDevice, localStorage.getItem('token'));\n\n      if (result) {\n        toggle();\n        return history.push('/main/devices');\n      }\n\n      return console.log(\"opps try again\");\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    children: /*#__PURE__*/_jsxDEV(MDBModal, {\n      isOpen: props.showModal,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(MDBModalHeader, {\n        children: \"Add Devices\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBModalBody, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grey-text\",\n            children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"Car Age\",\n              icon: \"sort-numeric-up\",\n              name: \"carAge\",\n              value: selectedDevice.carAge,\n              type: \"number\",\n              onChange: handleChange,\n              validate: true,\n              error: \"wrong\",\n              success: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n              label: \"License Plate\",\n              icon: \"car\",\n              name: \"licensePlate\",\n              value: selectedDevice.licensePlate,\n              type: \"email\",\n              onChange: handleChange,\n              validate: true,\n              error: \"wrong\",\n              success: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(MDBIcon, {\n                icon: \"user\",\n                size: \"2x\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: handleChange,\n                name: \"customerId\",\n                className: \"browser-default custom-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  selected: true,\n                  hidden: true,\n                  children: \"Customer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 23\n                }, this), props.customers.map(customer => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    selected: customer._id === selectedDevice.customerId,\n                    value: customer._id,\n                    children: [\" \", customer.firstName + \"  \" + customer.lastName, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 37\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MDBModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(MDBBtn, {\n          color: \"secondary\",\n          onClick: () => toggle(),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          color: \"primary\",\n          onClick: evt => editDevice(evt),\n          children: \"Save changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DeviceModal, \"t/KxToLQKylcxMpGO8JOfqfEMyU=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeviceModal;\nexport default DeviceModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceModal\");","map":{"version":3,"sources":["/home/dajana/Desktop/Insurance-Managament-System/frontend/src/components/main/DeviceModal.jsx"],"names":["React","useState","useHistory","MDBContainer","MDBBtn","MDBModal","MDBModalBody","MDBModalHeader","MDBModalFooter","MDBInput","MDBIcon","API","require","default","DeviceModal","props","selectedDevice","setSelectedDevice","history","toggle","setShowModal","showModal","handleChange","evt","name","value","currentTarget","target","data","editDevice","preventDefault","result","localStorage","getItem","push","console","log","err","carAge","licensePlate","customers","map","customer","_id","customerId","firstName","lastName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput, MDBIcon } from 'mdbreact';\nconst API = require(\"../../api/main\").default;\n\nfunction DeviceModal(props) {\n    const [selectedDevice, setSelectedDevice] = useState(props.selectedDevice);\n    const history = useHistory();\n\n    const toggle = () => {\n      return props.setShowModal(!props.showModal);\n    }\n\n    const handleChange = (evt) => {\n      const { name, value } = evt.currentTarget || evt.target;\n      const data = {...selectedDevice};\n      data[name] = value;\n      setSelectedDevice(data);\n    }\n\n    const editDevice = async (evt) => {\n        try {\n            evt.preventDefault();\n            const result = await API.editDevice(selectedDevice, localStorage.getItem('token'));\n            if (result) {\n              toggle();\n              return history.push('/main/devices')\n            }\n            return console.log(\"opps try again\")\n          } catch(err) {\n            throw err;\n          }\n    }\n\n    return (\n      <MDBContainer>\n        <MDBModal isOpen={props.showModal} centered>\n          <MDBModalHeader>Add Devices</MDBModalHeader>\n          <MDBModalBody>\n            <form>\n                <div className=\"grey-text\">\n                    <MDBInput label=\"Car Age\" icon=\"sort-numeric-up\" name=\"carAge\" value={selectedDevice.carAge} type=\"number\" onChange={handleChange} validate error=\"wrong\" success=\"right\" />\n                    <MDBInput label=\"License Plate\" icon=\"car\" name=\"licensePlate\" value={selectedDevice.licensePlate} type=\"email\" onChange={handleChange} validate error=\"wrong\"  success=\"right\" />\n                    <div>\n                      <MDBIcon icon=\"user\" size=\"2x\"/>\n                      <select onChange={handleChange} name=\"customerId\" className=\"browser-default custom-select\">\n                      <option disabled selected hidden>Customer</option>\n                          {props.customers.map((customer)=> {\n                            return (<option selected={customer._id === selectedDevice.customerId} value={customer._id}> {customer.firstName + \"  \" + customer.lastName} </option>)\n                          })}\n                      </select>\n                      </div>\n                </div>\n            </form>\n          </MDBModalBody>\n          <MDBModalFooter>\n            <MDBBtn color=\"secondary\" onClick={() => toggle()}>Close</MDBBtn>\n            <MDBBtn color=\"primary\" onClick={(evt) => editDevice(evt)}>Save changes</MDBBtn>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n    );\n}\n\nexport default DeviceModal;"]},"metadata":{},"sourceType":"module"}