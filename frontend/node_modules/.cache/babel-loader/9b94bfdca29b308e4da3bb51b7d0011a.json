{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = 'http://localhost:5001'; //TODO: ADD LOGSSS\n\nconst register = async insuranceCompany => {\n  try {\n    const {\n      data: result\n    } = await axios({\n      method: 'POST',\n      url: BASE_URL + '/register',\n      data: insuranceCompany\n    });\n    if (result.statusCode === 200) return true;\n    return false;\n  } catch (err) {\n    throw err;\n  }\n};\n\nconst login = async authCredentials => {\n  const {\n    data: result\n  } = await axios({\n    method: 'POST',\n    url: BASE_URL + '/login',\n    data: authCredentials\n  });\n  if (result.statusCode === 403 || result.statusCode === 400) return false;\n  return result;\n};\n\nconst getLoggedUser = async token => {\n  const {\n    data: result\n  } = await axios({\n    method: 'GET',\n    url: BASE_URL + '/getLoggedUser',\n    headers: {\n      \"auth-token\": token\n    }\n  });\n  if (result.statusCode === 403 || result.statusCode === 400) return false;\n  return result;\n};\n\nconst updateProfile = async (token, insuranceCompany) => {\n  const {\n    data: result\n  } = await axios({\n    method: 'POST',\n    url: BASE_URL + '/editInsuranceCompany',\n    headers: {\n      \"auth-token\": token\n    },\n    data: insuranceCompany\n  });\n  if (result.statusCode === 403 || result.statusCode === 400) return false;\n  return true;\n};\n\nconst apis = {\n  register,\n  login,\n  getLoggedUser,\n  updateProfile\n};\nexport default apis;","map":{"version":3,"sources":["/home/dajana/Desktop/Insurance-Managament-System/frontend/src/api/index.js"],"names":["axios","BASE_URL","register","insuranceCompany","data","result","method","url","statusCode","err","login","authCredentials","getLoggedUser","token","headers","updateProfile","apis"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAI,uBAAlB,C,CACA;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,gBAAP,IAA4B;AACzC,MAAI;AACA,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAmB,MAAML,KAAK,CAAC;AACjCM,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,GAAG,EAAEN,QAAQ,GAAG,WAFiB;AAGjCG,MAAAA,IAAI,EAAED;AAH2B,KAAD,CAApC;AAKA,QAAIE,MAAM,CAACG,UAAP,KAAsB,GAA1B,EAA+B,OAAO,IAAP;AAC/B,WAAO,KAAP;AACH,GARD,CAQE,OAAOC,GAAP,EAAY;AACV,UAAMA,GAAN;AACH;AACJ,CAZD;;AAcA,MAAMC,KAAK,GAAG,MAAMC,eAAN,IAA0B;AACpC,QAAM;AAAEP,IAAAA,IAAI,EAAEC;AAAR,MAAkB,MAAML,KAAK,CAAC;AAChCM,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,GAAG,EAAEN,QAAQ,GAAG,QAFgB;AAGhCG,IAAAA,IAAI,EAAEO;AAH0B,GAAD,CAAnC;AAKA,MAAIN,MAAM,CAACG,UAAP,KAAsB,GAAtB,IAA6BH,MAAM,CAACG,UAAP,KAAsB,GAAvD,EAA4D,OAAO,KAAP;AAC5D,SAAOH,MAAP;AACH,CARD;;AAUA,MAAMO,aAAa,GAAG,MAAMC,KAAN,IAAgB;AAClC,QAAM;AAAET,IAAAA,IAAI,EAAEC;AAAR,MAAkB,MAAML,KAAK,CAAC;AAChCM,IAAAA,MAAM,EAAE,KADwB;AAEhCC,IAAAA,GAAG,EAAEN,QAAQ,GAAG,gBAFgB;AAGhCa,IAAAA,OAAO,EAAE;AACL,oBAAcD;AADT;AAHuB,GAAD,CAAnC;AAOA,MAAIR,MAAM,CAACG,UAAP,KAAsB,GAAtB,IAA6BH,MAAM,CAACG,UAAP,KAAsB,GAAvD,EAA4D,OAAO,KAAP;AAC5D,SAAOH,MAAP;AACH,CAVD;;AAYA,MAAMU,aAAa,GAAG,OAAMF,KAAN,EAAaV,gBAAb,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAkB,MAAML,KAAK,CAAC;AAChCM,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,GAAG,EAAEN,QAAQ,GAAG,uBAFgB;AAGhCa,IAAAA,OAAO,EAAE;AACL,oBAAcD;AADT,KAHuB;AAMhCT,IAAAA,IAAI,EAAED;AAN0B,GAAD,CAAnC;AAQA,MAAIE,MAAM,CAACG,UAAP,KAAsB,GAAtB,IAA6BH,MAAM,CAACG,UAAP,KAAsB,GAAvD,EAA4D,OAAO,KAAP;AAC5D,SAAO,IAAP;AACH,CAXD;;AAaA,MAAMQ,IAAI,GAAG;AACTd,EAAAA,QADS;AAETQ,EAAAA,KAFS;AAGTE,EAAAA,aAHS;AAITG,EAAAA;AAJS,CAAb;AAMA,eAAeC,IAAf","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL =  'http://localhost:5001';\n//TODO: ADD LOGSSS\n\nconst register = async (insuranceCompany) => {\n    try {\n        const { data: result}  = await axios({\n            method: 'POST', \n            url: BASE_URL + '/register', \n            data: insuranceCompany\n        });\n        if (result.statusCode === 200) return true;\n        return false; \n    } catch (err) {\n        throw err;\n    }\n}\n\nconst login = async(authCredentials) => {\n    const { data: result} = await axios({\n        method: 'POST', \n        url: BASE_URL + '/login', \n        data: authCredentials\n    });\n    if (result.statusCode === 403 || result.statusCode === 400) return false;\n    return result;\n}\n\nconst getLoggedUser = async(token) => {\n    const { data: result} = await axios({\n        method: 'GET', \n        url: BASE_URL + '/getLoggedUser',\n        headers: {\n            \"auth-token\": token\n        }\n    });\n    if (result.statusCode === 403 || result.statusCode === 400) return false;\n    return result;\n}\n\nconst updateProfile = async(token, insuranceCompany) => {\n    const { data: result} = await axios({\n        method: 'POST', \n        url: BASE_URL + '/editInsuranceCompany',\n        headers: {\n            \"auth-token\": token\n        },\n        data: insuranceCompany\n    });\n    if (result.statusCode === 403 || result.statusCode === 400) return false;\n    return true;\n}\n\nconst apis = {\n    register,\n    login,\n    getLoggedUser,\n    updateProfile\n}\nexport default apis;"]},"metadata":{},"sourceType":"module"}